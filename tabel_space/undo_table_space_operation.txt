-- Author: 	Hussen refaa
-- creation Date: 	2008
-- Last Updated: 	0000-00-00
-- Control Number:	xxxx-xxxx-xxxx-xxxx
-- Version: 	0.0
-- Phone : + 4915775148443
-- Email: hus244@gmail.com

1- CREATE UNDO TABLESPACE UNDOTBS2 DATAFILE 'd:\data\undotbs2.dbf' size 100m;
2. Set these parameters:

UNDO_MANAGEMENT=AUTO
UNDO_TABLESPACE=UNDOTBS

ALTER SYSTEM SET UNDO_RETENTION = 2400;
ALTER SYSTEM SET UNDO_TABLESPACE = UNDOTBS;
ALTER SYSTEM SET UNDO_SUPPRESS_ERRORS=TRUE;
show parameter undo



The following initialization parameters are relevant for undo management:

    * undo_management - 
	If AUTO, use automatic undo management mode.
	If MANUAL, use manual undo management mode.
    * undo_tablespace -
	A dynamic parameter specifying the name of an undo tablespace to use.
    * undo_retention - 
	A dynamic parameter specifying the length of time to retain undo. 
	Default is 900 seconds.
    * undo_suppress_errors – 
	Set TRUE to suppress error messages generated by manual undo SQL 
	statements when operating in automatic undo management mode. 
	If FALSE, error messages are issued. This is a dynamic parameter. 



Renaming Tablespaces

alter tablespace ts_user rename to ts_user_01;

SELECT tablespace_name, retention FROM dba_tablespaces;

Oracle 10g automatically tunes undo retention to reduce the chances of 
"snapshot too old" errors during long-running queries. 
The UNDO_RETENTION parameter is used to set a low retention time threshold 
which the system will attempt to achieve. In the event of any undo space constraints the system
 will prioritize DML operations over undo retention meaning the low
 threshold may not be achieved. If the undo retention threshold must be guaranteed,
 even at the expense of DML operations, the RETENTION GUARANTEE clause can be set
 against the undo tablespace during or after creation:

-- Reset the undo low threshold.
ALTER SYSTEM SET UNDO_RETENTION = 2400;
-- Guarantee the minimum threshold is maintained.
   ALTER TABLESPACE undotbs1 RETENTION GUARANTEE;

-- Switch back to the default mode.
ALTER TABLESPACE undotbs1 RETENTION NOGUARANTEE;


-- Add a datafile.
ALTER TABLESPACE undotbs_01
  ADD DATAFILE 'C:\Oracle\Ordata\TSH1\undo0102.dbf'
  AUTOEXTEND ON NEXT 1M MAXSIZE UNLIMITED;

-- Resize an undo datafile.
ALTER DATABASE DATAFILE 'C:\Oracle\Ordata\TSH1\undo0102.dbf'
  RESIZE 10M;

-- Perform backup operations
ALTER TABLESPACE undotbs_01 BEGIN BACKUP;
ALTER TABLESPACE undotbs_01 END BACKUP;

-- Drop an undo tablespace.
DROP TABLESPACE undotbs_01;

------------------------------------------------------------------------------
------------------------------------------------------------------------------
----- view and query
V$UNDOSTAT
V$ROLLSTAT
V$TRANSACTION
DBA_UNDO_EXTENTS
------------------------------------------------------------------------------
------------------------------------------------------------------------------

--- Use this query to see how many rollback segments were corrupted:

SQL>   select segment_name,status,tablespace_name 
       from dba_rollback_segs where status='NEEDS RECOVERY';


--- The DBA_TABLESPACES view maintains data about UNDO tablespaces just
     as it does with any other tablespace in your system: 


SQL> select tablespace_name, contents from dba_tablespaces where contents = 'UNDO';

--- or
SQL> select * from v$tablespace;

--- table space data files
SQL> select * from dba_data_files



--- You can query the DBA_ROLLBACK_SEGS view to 
    see the system-generated undo segments, as follows: 

SQL> select owner, segment_name, tablespace_name from dba_rollback_segs;


-- The V$UNDOSTATS view lets you look at all statistics associated with the UNDO tablespace,
   including the tuned_undoretention value over time, as in: 

SQL> select tuned_undoretention from v$undostat;


--- all undo parameters
SQL> show parameter undo


---To view statistics for tuning undo tablespace query the following dictionary

SQL>select * from v$undostat;

---To see how many active Transactions are there and to see undo segment information give the following command

SQL>select * from v$transaction;

---To see the sizes of extents in the undo tablespace give the following query

SQL>select * from DBA_UNDO_EXTENTS;



----------------------------------------------------------------------
----------------------------------------------------------------------
Migrating from Rollback Segments to UNDO Tablespace

To move an existing Oracle9i or Oracle Database 10g system from manual undo management 
(using rollback segments) to automatic undo management requires a
 shut down and restart—you must shut-down the database, set the undo_management parameter to AUTO,
 and then restart the database—assuming you've created the UNDO tablespace first, however.
 To get some guidance about how large to make that UNDO tablespace, you can use a function from
 the Undo Advisor PL/SQL package created just for that purpose, as in this example: 


SQL> set serveroutput on;
SQL> declare utbsize_in_MB number;
  2    begin
  3    utbsize_in_MB := DBMS_UNDO_ADV.RBU_MIGRATION;
  4    dbms_output.put_line(TO_CHAR(utbsize_in_MB));
  5    end;
  6    /

187

PL/SQL procedure successfully completed.


In this case, the return value of 187 is the suggested starting size in megabytes for


-----------------------------------------------------------
-----------------------------------------------------------
--- create multi undo table space

manages undo segments within a specific undo tablespace that is assigned to an instance. 
 Each RAC node should have its own undo tablespace!


create undo tablespace UNDOTBS2 datafile '/u05/oradata/STG/undotbs2_01.dbf' size 2G;
And assign each instance its own tablespace once again:
alter system set undo_tablespace=UNDOTBS1 SID='STG1';
alter system set undo_tablespace=UNDOTBS2 SID=’STG2?;

 an UNDO tablespace based on current rollback segment utilization in an existing system. 


---------------------------------------------------------
---- Sizing your undo tablespace

Sizing an UNDO tablespace requires three pieces of data. 

(UR) UNDO_RETENTION in seconds 
(UPS) Number of undo data blocks generated per second 
(DBS) Overhead varies based on extent and file size (db_block_size) 
UndoSpace = [UR * (UPS * DBS)] + (DBS * 24)



 The following formula calculates the total number of blocks generated
 and divides it by the amount of time monitored, in seconds:

SQL> SELECT (SUM(undoblks))/ SUM ((end_time - begin_time) * 86400)
     FROM v$undostat;


--- The following query calculates the number of bytes needed: 

SQL> SELECT (UR * (UPS * DBS)) + (DBS * 24) AS "Bytes" 
     FROM (SELECT value AS UR FROM v$parameter WHERE name = 'undo_retention'), 
     (SELECT (SUM(undoblks)/SUM(((end_time - begin_time)*86400))) AS UPS FROM v$undostat), 
     (select block_size as DBS from dba_tablespaces where tablespace_name= 
     (select value from v$parameter where name = 'undo_tablespace'));






